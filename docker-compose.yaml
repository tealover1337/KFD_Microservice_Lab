services:
  config-server:
    build: ./config-server
    image: cherkasov-config-server:latest
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - cherkasov-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  discovery-service:
    build: ./discovery-server
    image: cherkasov-discovery-service:latest
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - CONFIG_SERVER_URI=http://config-server:8888
    networks:
      - cherkasov-network
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
  api-gateway:
    build: ./api-gateway
    image: cherkasov-api-gateway:latest
    container_name: api-gateway
    environment:
      - CONFIG_SERVER_URI=http://config-server:8888
      - DISCOVERY_SERVER_URI=http://discovery-service:8761/eureka
      - ALLOWED_ORIGIN=*
    ports:
      - "8080:8080"
    depends_on:
      discovery-service:
        condition: service_healthy
    networks:
      - cherkasov-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:latest
    container_name: postgres-db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - cherkasov-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build: ./user-microservice
    image: cherkasov-user-service:latest
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASSWORD}
      DATABASE_NAME: user_service_db
      POSTGRES_JDBC_URL: postgres:5432
      DISCOVERY_SERVER_URI: http://discovery-service:8761/eureka
    networks:
      - cherkasov-network
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  payment-service:
    build: ./payment-microservice
    image: cherkasov-payment-service:latest
    container_name: payment-service
    ports:
      - "8082:8082"
    environment:
      CONFIG_SERVER_URI: http://config-server:8888
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASSWORD}
      DATABASE_NAME: payment_service_db
      POSTGRES_JDBC_URL: postgres:5432
      DISCOVERY_SERVER_URI: http://discovery-service:8761/eureka
    networks:
      - cherkasov-network
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 10

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - cherkasov-network
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    depends_on:
      config-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/ready"]
      interval: 10s
      timeout: 5s
      retries: 20

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - cherkasov-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_DEFAULT_THEME=dark
    depends_on:
      prometheus:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  pgdata:
  prometheus_data:
  grafana_data:

networks:
  cherkasov-network:
    driver: bridge
